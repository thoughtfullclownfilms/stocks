{"version":3,"sources":["utils/helper.js","Components/Charts/Charts.js","Components/Tabs.js","Components/Menu.js","Components/MenuStock.js","Components/MenuStrikePrice.js","Components/Charts/Chart2.js","Components/Buttons/FloatingButton.js","Containers/Home.js","App.js","serviceWorker.js","index.js"],"names":["apiRequest","a","async","url","method","bodyParams","fetch","headers","Accept","body","JSON","stringify","undefined","response","json","Charts","date","index","type","ce","pe","React","useState","chartData","setChartData","chartData2","setChartData2","point","setPoint","point2","setPoint2","useEffect","authHandler","pointtype","stockname","strike_price_pe","strike_price_ce","userData","data","success","cData","peak","low","points","console","log","length","i","time_hour_m_in_sec","indexprice","stock","j","data2","last_price","oi","expiry","strike_price","instrument_type","id","time","toFixed","oice","oipe","last_price_ce","last_price_pe","height","push","interval","setInterval","clearInterval","updatechart","width","margin","top","right","bottom","left","dataKey","stroke","fill","strokeDasharray","allowDecimals","allowDataOverflow","domain","content","e","active","payload","className","FormControl","variant","style","display","flexDirection","justifyContent","TextField","label","defaultValue","onChange","target","value","padding","Fab","color","aria-label","onClick","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","ScrollableTabsButtonForce","cePrice","pePrice","classes","Container","p","marginTop","maxWidth","formControl","spacing","minWidth","selectEmpty","SimpleListMenu","changeDate","selectedIndex","setSelectedIndex","options","setOptions","inputLabel","useRef","InputLabel","ref","Select","labelId","event","map","option","MenuItem","key","changeIndex","MenuStrikePrice","strikeprice","strikeprice2","options2","setOptions2","sort","reverse","Charts2","sPrice","lPrice","price","position","borderStyle","border","extendedIcon","marginRight","FloatingActionButtons","startPrice","lastPrice","Home","setdate","ind","setind","ceprice","setceprice","peprice","setpeprice","startprice","setstartprice","lastprice","setlastprice","tabs","setTabs","AppBar","newDate","newind","newPePrice","newCePrice","paddingRight","dateForChart","indForChart","ceForChart","peForChart","flex","listStyleType","tab","paddingTop","filter","_","handleRemoveChart","newvalue","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af652831.chunk.js","sourcesContent":["import validator from \"validator\";\nimport { DEFAULT_USER_AUTH } from \"./Consts\";\n\n/** Handle form validation for the login form\n * @param email - user's auth email\n * @param password - user's auth password\n * @param setError - function that handles updating error state value\n */\nexport const validateLoginForm = (email, password, setError) => {\n  // Check for undefined or empty input fields\n  if (!email || !password) {\n    //setError(\"Please enter a valid email and password.\");\n    return false;\n  }\n\n  // Validate email\n  if (!validator.isEmail(email)) {\n    if (!validator.isMobilePhone(email)) {\n      //    setError(\"Please enter a valid email address.\");\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/** Return user auth from local storage value */\nexport const getStoredUserAuth = () => {\n  const auth = localStorage.getItem(\"UserAuth\");\n  if (auth) {\n    return JSON.parse(auth);\n  }\n  return DEFAULT_USER_AUTH;\n};\n\n/**\n * API Request handler\n * @param url - api endpoint\n * @param method - http method\n * @param bodyParams - body parameters of request\n */\nexport const apiRequest = async ({ url, method, bodyParams }) => {\n  const response = await fetch(url, {\n    method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: bodyParams ? JSON.stringify(bodyParams) : undefined\n  });\n  return await response.json();\n};\n\n/**\n * API Request handler\n * @param url - api endpoint\n * @param method - http method\n * @param bodyParams - body parameters of request\n */\nexport const apiImageUpdate = async ({ url, method, bodyParams }) => {\n  var { imagePath } = bodyParams;\n  const response = await fetch(url, {\n    method,\n    body: imagePath\n  });\n  return await response.json();\n};\n","import React from \"react\";\nimport { apiRequest } from \"../../utils/helper\";\nimport {\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  ComposedChart,\n  Area\n} from \"recharts\";\nimport \"./Charts.css\";\nimport { FormControl, TextField, Fab } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nexport default function Charts({ date, index, type, ce, pe }) {\n  const [chartData, setChartData] = React.useState([]);\n  const [chartData2, setChartData2] = React.useState([]);\n  const [point, setPoint] = React.useState(21);\n  const [point2, setPoint2] = React.useState(21);\n  React.useEffect(() => {\n    const authHandler = async () => {\n      try {\n        const userData = await apiRequest({\n          url: \"https://api.optionalgo.in:6001/v1/getdata\",\n          method: \"post\",\n          bodyParams: {\n            date: date,\n            pointtype: type,\n            stockname: index,\n            strike_price_pe: pe,\n            strike_price_ce: ce\n          }\n        });\n        const { data, success } = userData;\n        if (success) {\n          let cData = [];\n          let peak = 0;\n          let low = 0;\n          let points = point;\n          console.log(data.length);\n          for (let i = 0; i < data.length; i++) {\n            let { time_hour_m_in_sec, indexprice, stock } = data[i];\n\n            for (let j = 0; j < stock.length; j++) {\n              let data2 = {};\n\n              if (type !== \"Both\") {\n                let {\n                  last_price,\n                  oi,\n                  expiry,\n                  strike_price,\n                  instrument_type\n                } = stock[j];\n                data2 = {\n                  id: time_hour_m_in_sec,\n                  time: time_hour_m_in_sec,\n                  indexprice: indexprice,\n                  last_price: last_price.toFixed(2),\n                  oi: oi,\n                  expiry: expiry,\n                  strike_price: strike_price,\n                  instrument_type: instrument_type\n                };\n              } else {\n                let {\n                  last_price,\n                  oi,\n                  oice,\n                  oipe,\n                  strike_price_pe,\n                  strike_price_ce,\n                  last_price_ce,\n                  last_price_pe,\n                  instrument_type\n                } = stock[j];\n                if (point === 0) {\n                  peak = indexprice.toFixed(2);\n                  low = indexprice.toFixed(2);\n                } else if (points === point || points === 0) {\n                  points = point;\n                  peak = last_price.toFixed(2);\n                  low = last_price.toFixed(2);\n                  points = points - 1;\n                } else {\n                  if (last_price > peak) {\n                    peak = last_price.toFixed(2);\n                  }\n                  if (last_price < low) {\n                    low = last_price.toFixed(2);\n                  }\n                  points = points - 1;\n                }\n                data2 = {\n                  id: cData.length,\n                  time: time_hour_m_in_sec,\n                  last_price: last_price,\n                  indexprice: indexprice,\n                  oi: oi,\n                  oice: oice,\n                  oipe: oipe,\n                  strike_price_ce: strike_price_ce,\n                  strike_price_pe: strike_price_pe,\n                  last_price_ce: last_price_ce,\n                  last_price_pe: last_price_pe,\n                  instrument_type: instrument_type,\n                  height: [low, peak]\n                };\n              }\n\n              cData.push(data2);\n            }\n          }\n\n          setChartData2([...cData]);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    authHandler();\n    const interval = setInterval(() => {\n      authHandler();\n    }, 60000);\n    return () => clearInterval(interval);\n  }, [date, index, type, ce, pe, point]);\n\n  React.useEffect(() => {\n    setChartData([]);\n    setChartData2([]);\n  }, [date, index, type, ce, pe, point]);\n\n  React.useEffect(() => {\n    const updatechart = () => {\n      if (chartData.length === 0) {\n        setChartData(chartData2);\n      } else {\n        for (let i = chartData.length; i < chartData2.length; i++) {\n          setChartData([...chartData, chartData2[i]]);\n        }\n      }\n    };\n    updatechart();\n  }, [chartData2, chartData]);\n  const customTooltipOnYourLine = e => {\n    if (\n      e.active &&\n      e.payload != null &&\n      e.payload[0] != null &&\n      type !== \"Both\"\n    ) {\n      return (\n        <div className=\"custom-tooltip\">\n          <p>{e.payload[0].payload[\"time\"]}</p>\n          <p>{e.payload[0].payload[\"last_price\"]}</p>\n          <p>{e.payload[0].payload[\"strike_price\"]}</p>\n          <p>{e.payload[0].payload[\"indexprice\"]}</p>\n        </div>\n      );\n    }\n    if (\n      e.active &&\n      e.payload != null &&\n      e.payload[0] != null &&\n      type === \"Both\"\n    ) {\n      return (\n        <div className=\"customTooltip\">\n          <div className=\"tooltipContent\">\n            <p>LTP: {e.payload[0].payload[\"last_price\"]}</p>\n            <p>Puts Last Price: {e.payload[0].payload[\"last_price_pe\"]}</p>\n            <p>Call Last Price: {e.payload[0].payload[\"last_price_ce\"]}</p>\n            <p>OI: {e.payload[0].payload[\"oi\"]}</p>\n\n            <p>Puts Price: {e.payload[0].payload[\"strike_price_pe\"]}</p>\n            <p>Call Price: {e.payload[0].payload[\"strike_price_ce\"]}</p>\n            <p>Time: {e.payload[0].payload[\"time\"]}</p>\n            <p>Low: {e.payload[0].payload[\"height\"][0]}</p>\n            <p>Peak: {e.payload[0].payload[\"height\"][1]}</p>\n          </div>\n        </div>\n      );\n    } else {\n      return \"\";\n    }\n  };\n  const customTooltipOnYourLine2 = e => {\n    if (\n      e.active &&\n      e.payload != null &&\n      e.payload[0] != null &&\n      type !== \"Both\"\n    ) {\n      return (\n        <div className=\"custom-tooltip\">\n          <p>{e.payload[0].payload[\"time\"]}</p>\n          <p>{e.payload[0].payload[\"last_price\"]}</p>\n          <p>{e.payload[0].payload[\"strike_price\"]}</p>\n          <p>{e.payload[0].payload[\"indexprice\"]}</p>\n        </div>\n      );\n    }\n    if (\n      e.active &&\n      e.payload != null &&\n      e.payload[0] != null &&\n      type === \"Both\"\n    ) {\n      return (\n        <div className=\"customTooltip\">\n          <div className=\"tooltipContent\">\n            <p>LTP: {e.payload[0].payload[\"last_price\"]}</p>\n            <p>OI: {e.payload[0].payload[\"oi\"]}</p>\n            <p>Puts OI: {e.payload[0].payload[\"oipe\"]}</p>\n            <p>Call OI: {e.payload[0].payload[\"oice\"]}</p>\n            <p>Puts Price: {e.payload[0].payload[\"strike_price_pe\"]}</p>\n            <p>Call Price: {e.payload[0].payload[\"strike_price_ce\"]}</p>\n            <p>Time: {e.payload[0].payload[\"time\"]}</p>\n            <p>Low: {e.payload[0].payload[\"height\"][0]}</p>\n            <p>Peak: {e.payload[0].payload[\"height\"][1]}</p>\n          </div>\n        </div>\n      );\n    } else {\n      return \"\";\n    }\n  };\n\n  return (\n    <div>\n      <ResponsiveContainer width={1000} height={400}>\n        <ComposedChart\n          width={1000}\n          height={400}\n          data={chartData}\n          margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\n        >\n          {point >= 2 ? (\n            <Area dataKey=\"height\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n          ) : null}\n          <Line type=\"monotone\" dataKey=\"last_price\" stroke=\"#8884d8\" />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis\n            type=\"number\"\n            allowDecimals={true}\n            allowDataOverflow\n            domain={[\"dataMin-10\", \"dataMax+10\"]}\n          />\n          <Tooltip content={customTooltipOnYourLine} />\n        </ComposedChart>\n      </ResponsiveContainer>\n      <div>\n        <FormControl\n          variant=\"outlined\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\"\n          }}\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Points\"\n            variant=\"outlined\"\n            defaultValue={21}\n            onChange={e => {\n              setPoint2(e.target.value);\n            }}\n            style={{ padding: \"1%\" }}\n          />\n          <Fab\n            color=\"primary\"\n            aria-label=\"add\"\n            onClick={() => {\n              setPoint(point2);\n            }}\n            style={{ padding: \"1%\" }}\n          >\n            <AddIcon\n              onClick={() => {\n                setPoint(point2);\n              }}\n            />\n          </Fab>\n        </FormControl>\n        <ResponsiveContainer width={1000} height={400}>\n          <ComposedChart\n            width={1000}\n            height={400}\n            data={chartData}\n            margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\n          >\n            <Line type=\"monotone\" dataKey=\"oi\" stroke=\"#fb3a1c\" />\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"time\" />\n            <YAxis\n              type=\"number\"\n              allowDecimals={true}\n              allowDataOverflow\n              domain={[\"dataMin-10\", \"dataMax+10\"]}\n            />\n            <Tooltip content={customTooltipOnYourLine2} />\n          </ComposedChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { Container } from \"@material-ui/core\";\nimport \"./Tabs.css\";\nimport Charts from \"./Charts/Charts\";\nfunction TabPanel(props) {\n  const { children, index, date, indexType, ce, pe, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      <Container p={3} style={{ marginTop: \"10px\" }}>\n        <Charts date={date} index={indexType} type={children} ce={ce} pe={pe} />\n      </Container>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function ScrollableTabsButtonForce({\n  date,\n  index,\n  cePrice,\n  pePrice\n}) {\n  const classes = useStyles();\n\n  if (date !== \"\" && index !== \"\" && cePrice !== 0 && pePrice !== 0) {\n    console.log(date);\n    console.log(date !== \" \");\n    return (\n      <div className={classes.root}>\n        <Container p={3} style={{ marginTop: \"10px\" }}>\n          <Charts\n            date={date}\n            index={index}\n            type={\"Both\"}\n            ce={cePrice}\n            pe={pePrice}\n          />\n        </Container>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Select, FormControl, InputLabel, MenuItem } from \"@material-ui/core\";\nimport { apiRequest } from \"../utils/helper\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function SimpleListMenu({ changeDate }) {\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = React.useState(\"\");\n  const [options, setOptions] = React.useState([]);\n  const inputLabel = React.useRef(null);\n\n  React.useEffect(() => {\n    authHandler();\n  }, []);\n  const authHandler = async () => {\n    try {\n      const userData = await apiRequest({\n        url: \"https://api.optionalgo.in:6001/v1/getdates\",\n        method: \"post\",\n        bodyParams: {}\n      });\n      const { data, success } = userData;\n      console.log(userData);\n      if (success) {\n        setOptions(data);\n      }\n    } catch (err) {}\n  };\n\n  const handleChange = event => {\n    setSelectedIndex(event.target.value);\n    changeDate(event.target.value);\n  };\n  return (\n    <div className={classes.root}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel ref={inputLabel} id=\"demo-simple-select-outlined-label\">\n          Select Date\n        </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-required-label\"\n          id=\"demo-simple-select-required\"\n          value={selectedIndex}\n          onChange={handleChange}\n          className={classes.selectEmpty}\n        >\n          {options.map((option, index) => (\n            <MenuItem value={option} key={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Select, FormControl, InputLabel, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function SimpleListMenu({ changeIndex }) {\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = React.useState(\"\");\n  const options = [\"NIFTY\", \"BANKNIFTY\"];\n  const inputLabel = React.useRef(null);\n\n  const handleChange = event => {\n    setSelectedIndex(event.target.value);\n    changeIndex(event.target.value);\n  };\n  return (\n    <div className={classes.root}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel ref={inputLabel} id=\"demo-simple-select-outlined-label\">\n          Select Index\n        </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-required-label\"\n          id=\"demo-simple-select-required\"\n          value={selectedIndex}\n          onChange={handleChange}\n          className={classes.selectEmpty}\n        >\n          {options.map((option, index) => (\n            <MenuItem value={option}>{option}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { apiRequest } from \"../utils/helper\";\nimport { Select, FormControl, InputLabel } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function MenuStrikePrice({\n  strikeprice,\n  strikeprice2,\n  date,\n  index,\n  type\n}) {\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const [options, setOptions] = React.useState([]);\n  const [options2, setOptions2] = React.useState([]);\n\n  React.useEffect(() => {\n    const authHandler = async () => {\n      try {\n        const userData = await apiRequest({\n          url: \"https://api.optionalgo.in:6001/v1/getstrikeprices\",\n          method: \"post\",\n          bodyParams: {\n            date: date,\n            pointtype: type,\n            stockname: index\n          }\n        });\n        const { data, success } = userData;\n        console.log(userData);\n        if (success) {\n          setOptions(data);\n        }\n      } catch (err) {}\n    };\n    authHandler();\n  }, [date, index, type]);\n  React.useEffect(() => {\n    let data = options.sort();\n    if (type === \"PE\") {\n      data = data.reverse();\n    }\n    setOptions2(data);\n  }, [options, type]);\n\n  const handleChange = event => {\n    setSelectedIndex(event.target.value);\n    console.log(event.target.value);\n    console.log(options[event.target.value]);\n    if (strikeprice) strikeprice(event.target.value);\n    if (strikeprice2) strikeprice2(event.target.value);\n  };\n\n  const inputLabel = React.useRef(null);\n  if (date !== \"\" && index !== \"\" && options.length !== 0) {\n    return (\n      <div className={classes.root}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel ref={inputLabel} id=\"demo-simple-select-outlined-label\">\n            {type} Price\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-required-label\"\n            id=\"demo-simple-select-required\"\n            value={selectedIndex}\n            onChange={handleChange}\n            className={classes.selectEmpty}\n          >\n            {options2.map((option, index) => (\n              <MenuItem value={option} key={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\nimport { apiRequest } from \"../../utils/helper\";\nimport {\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  ComposedChart,\n  Area\n} from \"recharts\";\nimport \"./Charts.css\";\nimport { FormControl, TextField, Fab } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nexport default function Charts2({ date, index, sPrice, lPrice }) {\n  const [chartData, setChartData] = React.useState([]);\n  const [chartData2, setChartData2] = React.useState([]);\n  const [point, setPoint] = React.useState(21);\n  const [point2, setPoint2] = React.useState(21);\n\n  React.useEffect(() => {\n    setChartData([]);\n    setChartData2([]);\n  }, [index, date, point]);\n  React.useEffect(() => {\n    const authHandler = async () => {\n      try {\n        console.log(date, index);\n        const userData = await apiRequest({\n          url: \"https://api.optionalgo.in:6001/v1/getdata\",\n          method: \"post\",\n          bodyParams: {\n            date: date,\n            pointtype: \"CE\",\n            stockname: index\n          }\n        });\n        const { data, success } = userData;\n\n        if (success) {\n          let cData = [];\n          let peak = 0;\n          let low = 0;\n          let points = point;\n\n          for (let i = 0; i < data.length; i++) {\n            let { time_hour_m_in_sec, indexprice } = data[i];\n\n            if (i === 0) {\n              sPrice(indexprice);\n            }\n            if (i === data.length - 1) {\n              lPrice(indexprice);\n            }\n            if (point === 0) {\n              peak = indexprice;\n              low = indexprice;\n            } else if (points === point || points === 0) {\n              points = point;\n              peak = indexprice;\n              low = indexprice;\n              points = points - 1;\n            } else {\n              if (indexprice > peak) {\n                peak = indexprice;\n              }\n              if (indexprice < low) {\n                low = indexprice;\n              }\n              points = points - 1;\n            }\n\n            cData.push({\n              time: time_hour_m_in_sec,\n              price: indexprice,\n              height: [low, peak]\n            });\n          }\n          setChartData2(cData);\n        }\n      } catch (err) {}\n    };\n    authHandler();\n\n    const interval = setInterval(() => {\n      authHandler();\n    }, 60000);\n    return () => clearInterval(interval);\n  }, [date, index, sPrice, lPrice, point]);\n\n  React.useEffect(() => {\n    const updatechart = () => {\n      if (chartData.length === 0) {\n        setChartData(chartData2);\n      } else {\n        for (let i = chartData.length; i < chartData2.length; i++) {\n          setChartData([...chartData, chartData2[i]]);\n        }\n      }\n    };\n    updatechart();\n  }, [chartData2, chartData]);\n\n  const customTooltipOnYourLine = e => {\n    if (e.active && e.payload != null && e.payload[0] != null) {\n      return (\n        <div className=\"customTooltip\">\n          <div className=\"tooltipContent\">\n            <p>Price: {e.payload[0].payload[\"price\"]}</p>\n            <p>Time: {e.payload[0].payload[\"time\"]}</p>\n            <p>Low: {e.payload[0].payload[\"height\"][0]}</p>\n            <p>Peak: {e.payload[0].payload[\"height\"][1]}</p>\n          </div>\n        </div>\n      );\n    } else {\n      return \"\";\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <br />\n      </div>\n\n      <ResponsiveContainer width={1000} height={400}>\n        <ComposedChart\n          width={1000}\n          height={400}\n          data={chartData}\n          margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\n        >\n          {point >= 2 ? (\n            <Area dataKey=\"height\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n          ) : null}\n          <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis\n            type=\"number\"\n            allowDecimals={true}\n            allowDataOverflow\n            domain={[\"dataMin-10\", \"dataMax+10 \"]}\n          />\n          <Tooltip content={customTooltipOnYourLine} />\n        </ComposedChart>\n      </ResponsiveContainer>\n      <div>\n        <FormControl\n          variant=\"outlined\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\"\n          }}\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Points\"\n            variant=\"outlined\"\n            defaultValue={21}\n            onChange={e => {\n              setPoint2(e.target.value);\n            }}\n            style={{ padding: \"1%\" }}\n          />\n          <Fab\n            color=\"primary\"\n            aria-label=\"add\"\n            onClick={() => {\n              setPoint(point2);\n            }}\n            style={{ padding: \"1%\" }}\n          >\n            <AddIcon\n              onClick={() => {\n                setPoint(point2);\n              }}\n            />\n          </Fab>\n        </FormControl>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n    },\r\n    position: \"fixed\",\r\n    right: \"5%\",\r\n    top: \"25%\",\r\n    bottom: \"auto\",\r\n    left: \"auto\",\r\n    borderStyle: \"groove\",\r\n    border: \"gold\",\r\n    background: \"black\",\r\n    color: \"white\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function FloatingActionButtons({\r\n  startPrice,\r\n  lastPrice,\r\n  index\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <h6>\r\n          <div style={{ color: \"green\" }}>Start Price:</div> {startPrice}\r\n        </h6>\r\n        <h6>\r\n          <div style={{ color: \"green\" }}>Last Price:</div> {lastPrice}\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./home.css\";\r\n\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport ScrollableTabsButtonForce from \"../Components/Tabs\";\r\nimport SimpleListMenu from \"../Components/Menu\";\r\nimport MenuStock from \"../Components/MenuStock\";\r\nimport { AppBar, Fab } from \"@material-ui/core\";\r\nimport MenuStrikePrice from \"../Components/MenuStrikePrice\";\r\nimport Charts2 from \"../Components/Charts/Chart2\";\r\nimport FloatingActionButtons from \"../Components/Buttons/FloatingButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MinusIcon from \"@material-ui/icons/Remove\";\r\n\r\nconst Home = () => {\r\n  const [date, setdate] = React.useState(\"\");\r\n  const [ind, setind] = React.useState(\"\");\r\n  const [ceprice, setceprice] = React.useState(0);\r\n  const [peprice, setpeprice] = React.useState(0);\r\n  const [startprice, setstartprice] = React.useState(0);\r\n  const [lastprice, setlastprice] = React.useState(0);\r\n  const [tabs, setTabs] = React.useState([]);\r\n  const changeDateHandler = newDate => {\r\n    setdate(newDate);\r\n    console.log(date);\r\n  };\r\n  const changeindHandler = newind => {\r\n    setind(newind);\r\n    console.log(ind);\r\n  };\r\n  const changeSp1Handler = newPePrice => {\r\n    setpeprice(newPePrice);\r\n    console.log(peprice);\r\n  };\r\n  const changeSp2Handler = newCePrice => {\r\n    setceprice(newCePrice);\r\n    console.log(ceprice);\r\n  };\r\n  const handleRemoveChart = key => {\r\n    console.log(key);\r\n\r\n    let data = tabs.filter((_, index) => index !== key);\r\n    console.log(data);\r\n    setTabs(data);\r\n  };\r\n  const handleAddChart = () => {\r\n    let dateForChart = date;\r\n    let indForChart = ind;\r\n    let ceForChart = ceprice;\r\n    let peForChart = peprice;\r\n    let data = (\r\n      <div>\r\n        <h6 style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <div style={{ color: \"green\" }}>CE Price: </div> {ceForChart}\r\n          <div style={{ flex: \"1\" }}></div>\r\n          <div style={{ color: \"green\" }}>PE Price: </div> {peForChart}\r\n        </h6>\r\n\r\n        <ScrollableTabsButtonForce\r\n          date={dateForChart}\r\n          index={indForChart}\r\n          pePrice={peForChart}\r\n          cePrice={ceForChart}\r\n        />\r\n      </div>\r\n    );\r\n    setTabs([data, ...tabs]);\r\n  };\r\n  return (\r\n    <div className=\"home-body\">\r\n      <MDBContainer className=\" mt-5 pt-5\">\r\n        <AppBar\r\n          position=\"static\"\r\n          style={{ display: \"flex\", justifyContent: \"center\", color: \"white\" }}\r\n          color=\"white\"\r\n        >\r\n          <div key=\"div\" className=\"drop\">\r\n            <SimpleListMenu key=\"slm\" changeDate={changeDateHandler} />\r\n            <MenuStock key=\"ind\" changeIndex={changeindHandler} />\r\n            {date !== \"\" && ind !== \"\" ? (\r\n              <MenuStrikePrice\r\n                key=\"PE\"\r\n                strikeprice={changeSp1Handler}\r\n                date={date}\r\n                index={ind}\r\n                type=\"PE\"\r\n              />\r\n            ) : null}\r\n            {date !== \"\" && ind !== \"\" && peprice !== \"\" ? (\r\n              <MenuStrikePrice\r\n                key=\"CE\"\r\n                strikeprice2={changeSp2Handler}\r\n                date={date}\r\n                index={ind}\r\n                type=\"CE\"\r\n              />\r\n            ) : null}\r\n            {ceprice !== 0 && peprice !== \"\" ? (\r\n              <div style={{ background: \"white\", paddingRight: \"1%\" }}>\r\n                <Fab\r\n                  color=\"primary\"\r\n                  aria-label=\"add\"\r\n                  style={{ width: \"50px\", top: \"20px\" }}\r\n                  onClick={handleAddChart}\r\n                >\r\n                  <AddIcon />\r\n                </Fab>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </AppBar>\r\n        {startprice !== 0 && lastprice !== 0 ? (\r\n          <FloatingActionButtons\r\n            startPrice={startprice}\r\n            lastPrice={lastprice}\r\n            index={ind}\r\n          />\r\n        ) : null}\r\n        <ul style={{ listStyleType: \"none\", margin: \"0\", padding: \"0\" }}>\r\n          {tabs.map((tab, index) => (\r\n            <li key={index} style={{ paddingTop: \"3%\" }}>\r\n              {tab}\r\n              <Fab\r\n                color=\"primary\"\r\n                key={index}\r\n                value={index}\r\n                aria-label=\"remove\"\r\n                onClick={() => handleRemoveChart(index)}\r\n                style={{ width: \"50px\", top: \"20px\" }}\r\n              >\r\n                <MinusIcon key={index} value={index} />\r\n              </Fab>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {date !== \"\" && ind !== \"\" ? (\r\n          <Charts2\r\n            date={date}\r\n            index={ind}\r\n            sPrice={newvalue => {\r\n              setstartprice(newvalue);\r\n            }}\r\n            lPrice={newvalue => {\r\n              setlastprice(newvalue);\r\n            }}\r\n          />\r\n        ) : null}\r\n      </MDBContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Home from \"./Containers/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}