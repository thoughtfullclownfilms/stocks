{"version":3,"sources":["utils/helper.js","Components/Charts/Charts.js","Components/Tabs.js","Components/Menu.js","Components/MenuStock.js","Components/MenuStrikePrice.js","Components/Charts/Chart2.js","Components/Buttons/FloatingButton.js","Containers/Home.js","App.js","serviceWorker.js","index.js"],"names":["apiRequest","a","async","url","method","bodyParams","fetch","headers","Accept","body","JSON","stringify","undefined","response","json","Charts","date","index","type","ce","pe","React","useState","chartData","setChartData","chartData2","setChartData2","point","setPoint","point2","setPoint2","useEffect","authHandler","pointtype","stockname","strike_price_pe","strike_price_ce","userData","data","success","console","log","cData","peak","low","points","i","length","time_hour_m_in_sec","indexprice","stock","j","data2","last_price","oi","expiry","strike_price","instrument_type","id","time","toFixed","last_price_ce","last_price_pe","height","push","interval","setInterval","clearInterval","updatechart","width","margin","top","right","bottom","left","dataKey","stroke","fill","strokeDasharray","allowDecimals","allowDataOverflow","domain","content","e","active","payload","className","FormControl","variant","style","display","flexDirection","justifyContent","TextField","label","defaultValue","onChange","target","value","padding","Fab","color","aria-label","onClick","TabPanel","props","children","indexType","other","Typography","component","role","hidden","aria-labelledby","Container","p","marginTop","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","ScrollableTabsButtonForce","cePrice","pePrice","classes","maxWidth","formControl","spacing","minWidth","selectEmpty","SimpleListMenu","changeDate","selectedIndex","setSelectedIndex","options","setOptions","inputLabel","useRef","InputLabel","ref","Select","labelId","event","map","option","MenuItem","changeIndex","MenuStrikePrice","strikeprice","strikeprice2","options2","setOptions2","sort","reverse","Charts2","sPrice","lPrice","price","position","borderStyle","border","extendedIcon","marginRight","FloatingActionButtons","startPrice","lastPrice","Home","setdate","ind","setind","ceprice","setceprice","peprice","setpeprice","startprice","setstartprice","lastprice","setlastprice","tabs","setTabs","AppBar","newDate","newind","newPePrice","newCePrice","paddingRight","dateForChart","indForChart","ceForChart","peForChart","flex","listStyleType","tab","key","paddingTop","filter","_","handleRemoveChart","newvalue","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ceab7f15.chunk.js","sourcesContent":["import validator from \"validator\";\nimport { DEFAULT_USER_AUTH } from \"./Consts\";\n\n/** Handle form validation for the login form\n * @param email - user's auth email\n * @param password - user's auth password\n * @param setError - function that handles updating error state value\n */\nexport const validateLoginForm = (email, password, setError) => {\n  // Check for undefined or empty input fields\n  if (!email || !password) {\n    //setError(\"Please enter a valid email and password.\");\n    return false;\n  }\n\n  // Validate email\n  if (!validator.isEmail(email)) {\n    if (!validator.isMobilePhone(email)) {\n      //    setError(\"Please enter a valid email address.\");\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/** Return user auth from local storage value */\nexport const getStoredUserAuth = () => {\n  const auth = localStorage.getItem(\"UserAuth\");\n  if (auth) {\n    return JSON.parse(auth);\n  }\n  return DEFAULT_USER_AUTH;\n};\n\n/**\n * API Request handler\n * @param url - api endpoint\n * @param method - http method\n * @param bodyParams - body parameters of request\n */\nexport const apiRequest = async ({ url, method, bodyParams }) => {\n  const response = await fetch(url, {\n    method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: bodyParams ? JSON.stringify(bodyParams) : undefined\n  });\n  return await response.json();\n};\n\n/**\n * API Request handler\n * @param url - api endpoint\n * @param method - http method\n * @param bodyParams - body parameters of request\n */\nexport const apiImageUpdate = async ({ url, method, bodyParams }) => {\n  var { imagePath } = bodyParams;\n  const response = await fetch(url, {\n    method,\n    body: imagePath\n  });\n  return await response.json();\n};\n","import React from \"react\";\nimport { apiRequest } from \"../../utils/helper\";\nimport {\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  ComposedChart,\n  Area\n} from \"recharts\";\nimport \"./Charts.css\";\nimport { FormControl, TextField, Fab } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nexport default function Charts({ date, index, type, ce, pe }) {\n  const [chartData, setChartData] = React.useState([]);\n  const [chartData2, setChartData2] = React.useState([]);\n  const [point, setPoint] = React.useState(21);\n  const [point2, setPoint2] = React.useState(21);\n  React.useEffect(() => {\n    const authHandler = async () => {\n      try {\n        const userData = await apiRequest({\n          url: \"https://api.optionalgo.in:6001/v1/getdata\",\n          method: \"post\",\n          bodyParams: {\n            date: date,\n            pointtype: type,\n            stockname: index,\n            strike_price_pe: pe,\n            strike_price_ce: ce\n          }\n        });\n        const { data, success } = userData;\n        console.log(userData);\n        if (success) {\n          let cData = [];\n          let peak = 0;\n          let low = 0;\n          let points = point;\n          for (let i = 0; i < data.length; i++) {\n            let { time_hour_m_in_sec, indexprice, stock } = data[i];\n\n            for (let j = 0; j < stock.length; j++) {\n              let data2 = {};\n\n              if (type !== \"Both\") {\n                let {\n                  last_price,\n                  oi,\n                  expiry,\n                  strike_price,\n                  instrument_type\n                } = stock[j];\n                data2 = {\n                  id: time_hour_m_in_sec,\n                  time: time_hour_m_in_sec,\n                  indexprice: indexprice,\n                  last_price: last_price.toFixed(2),\n                  oi: oi,\n                  expiry: expiry,\n                  strike_price: strike_price,\n                  instrument_type: instrument_type\n                };\n              } else {\n                let {\n                  last_price,\n                  oi,\n                  strike_price_pe,\n                  strike_price_ce,\n                  last_price_ce,\n                  last_price_pe,\n                  instrument_type\n                } = stock[j];\n                if (points === point || points === 0) {\n                  points = point;\n                  peak = last_price.toFixed(2);\n                  low = last_price.toFixed(2);\n                  points = points - 1;\n                } else {\n                  if (last_price > peak) {\n                    peak = last_price.toFixed(2);\n                  }\n                  if (last_price < low) {\n                    low = last_price.toFixed(2);\n                  }\n                  points = points - 1;\n                }\n                data2 = {\n                  id: cData.length,\n                  time: time_hour_m_in_sec,\n                  last_price: last_price.toFixed(2),\n                  indexprice: indexprice,\n                  oi: oi,\n                  strike_price_ce: strike_price_ce,\n                  strike_price_pe: strike_price_pe,\n                  last_price_ce: last_price_ce.toFixed(2),\n                  last_price_pe: last_price_pe.toFixed(2),\n                  instrument_type: instrument_type,\n                  height: [low, peak]\n                };\n              }\n\n              if (j === 0) {\n                console.log(cData);\n                cData.push(data2);\n              }\n            }\n          }\n          setChartData2(cData);\n        }\n      } catch (err) {}\n    };\n    authHandler();\n    const interval = setInterval(() => {\n      authHandler();\n    }, 60000);\n    return () => clearInterval(interval);\n  }, [date, index, type, ce, pe, point]);\n\n  React.useEffect(() => {\n    setChartData([]);\n    setChartData2([]);\n  }, [date, index, type, ce, pe, point]);\n\n  React.useEffect(() => {\n    const updatechart = () => {\n      if (chartData.length === 0) {\n        setChartData(chartData2);\n      } else {\n        for (let i = chartData.length; i < chartData2.length; i++) {\n          setChartData([...chartData, chartData2[i]]);\n        }\n      }\n    };\n    updatechart();\n  }, [chartData2, chartData]);\n\n  const customTooltipOnYourLine = e => {\n    if (\n      e.active &&\n      e.payload != null &&\n      e.payload[0] != null &&\n      type !== \"Both\"\n    ) {\n      return (\n        <div className=\"custom-tooltip\">\n          <p>{e.payload[0].payload[\"time\"]}</p>\n          <p>{e.payload[0].payload[\"last_price\"]}</p>\n          <p>{e.payload[0].payload[\"strike_price\"]}</p>\n          <p>{e.payload[0].payload[\"indexprice\"]}</p>\n        </div>\n      );\n    }\n    if (\n      e.active &&\n      e.payload != null &&\n      e.payload[0] != null &&\n      type === \"Both\"\n    ) {\n      return (\n        <div className=\"customTooltip\">\n          <div className=\"tooltipContent\">\n            <p>LTP: {e.payload[0].payload[\"last_price\"]}</p>\n            <p>Puts Price: {e.payload[0].payload[\"strike_price_pe\"]}</p>\n            <p>Call Price: {e.payload[0].payload[\"strike_price_ce\"]}</p>\n            <p>Puts Last Price: {e.payload[0].payload[\"last_price_pe\"]}</p>\n            <p>Call Last Price: {e.payload[0].payload[\"last_price_ce\"]}</p>\n            <p>Time: {e.payload[0].payload[\"time\"]}</p>\n            <p>Low: {e.payload[0].payload[\"height\"][0]}</p>\n            <p>Peak: {e.payload[0].payload[\"height\"][1]}</p>\n          </div>\n        </div>\n      );\n    } else {\n      return \"\";\n    }\n  };\n\n  return (\n    <div>\n      <ResponsiveContainer width={1000} height={400}>\n        <ComposedChart\n          width={1000}\n          height={400}\n          data={chartData}\n          margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\n        >\n          <Line type=\"monotone\" dataKey=\"last_price\" stroke=\"#8884d8\" />\n          {point >= 2 ? (\n            <Area dataKey=\"height\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n          ) : null}\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis\n            type=\"number\"\n            allowDecimals={true}\n            allowDataOverflow\n            domain={[\"dataMin-10\", \"dataMax+10 \"]}\n          />\n          <Tooltip content={customTooltipOnYourLine} />\n        </ComposedChart>\n      </ResponsiveContainer>\n      <div>\n        <FormControl\n          variant=\"outlined\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\"\n          }}\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Points\"\n            variant=\"outlined\"\n            defaultValue={21}\n            onChange={e => {\n              setPoint2(e.target.value);\n            }}\n            style={{ padding: \"1%\" }}\n          />\n          <Fab\n            color=\"primary\"\n            aria-label=\"add\"\n            onClick={() => {\n              setPoint(point2);\n            }}\n            style={{ padding: \"1%\" }}\n          >\n            <AddIcon\n              onClick={() => {\n                setPoint(point2);\n              }}\n            />\n          </Fab>\n        </FormControl>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { Container } from \"@material-ui/core\";\nimport \"./Tabs.css\";\nimport Charts from \"./Charts/Charts\";\nfunction TabPanel(props) {\n  const { children, value, index, date, indexType, ce, pe, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Container p={3} style={{ marginTop: \"10px\" }}>\n          <Charts\n            date={date}\n            index={indexType}\n            type={children}\n            ce={ce}\n            pe={pe}\n          />\n        </Container>\n      )}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    \"aria-controls\": `scrollable-force-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function ScrollableTabsButtonForce({\n  date,\n  index,\n  cePrice,\n  pePrice\n}) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  if (date !== \"\" && index !== \"\" && cePrice !== 0 && pePrice !== 0) {\n    console.log(date);\n    console.log(date !== \" \");\n    return (\n      <div className={classes.root}>\n        <TabPanel\n          value={value}\n          date={date}\n          indexType={index}\n          ce={cePrice}\n          pe={pePrice}\n          index={0}\n        >\n          Both\n        </TabPanel>\n        <TabPanel\n          value={value}\n          date={date}\n          indexType={index}\n          ce={cePrice}\n          index={1}\n        >\n          CE\n        </TabPanel>\n        <TabPanel\n          value={value}\n          date={date}\n          indexType={index}\n          pe={pePrice}\n          index={2}\n        >\n          PE\n        </TabPanel>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Select, FormControl, InputLabel, MenuItem } from \"@material-ui/core\";\nimport { apiRequest } from \"../utils/helper\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function SimpleListMenu({ changeDate }) {\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = React.useState(\"\");\n  const [options, setOptions] = React.useState([]);\n  const inputLabel = React.useRef(null);\n\n  React.useEffect(() => {\n    authHandler();\n  }, []);\n  const authHandler = async () => {\n    try {\n      const userData = await apiRequest({\n        url: \"https://api.optionalgo.in:6001/v1/getdates\",\n        method: \"post\",\n        bodyParams: {}\n      });\n      const { data, success } = userData;\n      console.log(userData);\n      if (success) {\n        setOptions(data);\n      }\n    } catch (err) {}\n  };\n\n  const handleChange = event => {\n    setSelectedIndex(event.target.value);\n    changeDate(event.target.value);\n  };\n  return (\n    <div className={classes.root}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel ref={inputLabel} id=\"demo-simple-select-outlined-label\">\n          Select Date\n        </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-required-label\"\n          id=\"demo-simple-select-required\"\n          value={selectedIndex}\n          onChange={handleChange}\n          className={classes.selectEmpty}\n        >\n          {options.map((option, index) => (\n            <MenuItem value={option}>{option}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Select, FormControl, InputLabel, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function SimpleListMenu({ changeIndex }) {\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = React.useState();\n  const options = [\"NIFTY\", \"BANKNIFTY\"];\n  const inputLabel = React.useRef(null);\n\n  const handleChange = event => {\n    setSelectedIndex(event.target.value);\n    changeIndex(event.target.value);\n  };\n  return (\n    <div className={classes.root}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel ref={inputLabel} id=\"demo-simple-select-outlined-label\">\n          Select Index\n        </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-required-label\"\n          id=\"demo-simple-select-required\"\n          value={selectedIndex}\n          onChange={handleChange}\n          className={classes.selectEmpty}\n        >\n          {options.map((option, index) => (\n            <MenuItem value={option}>{option}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { apiRequest } from \"../utils/helper\";\nimport { Select, FormControl, InputLabel } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function MenuStrikePrice({\n  strikeprice,\n  strikeprice2,\n  date,\n  index,\n  type\n}) {\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const [options, setOptions] = React.useState([]);\n  const [options2, setOptions2] = React.useState([]);\n\n  React.useEffect(() => {\n    const authHandler = async () => {\n      try {\n        const userData = await apiRequest({\n          url: \"https://api.optionalgo.in:6001/v1/getstrikeprices\",\n          method: \"post\",\n          bodyParams: {\n            date: date,\n            pointtype: type,\n            stockname: index\n          }\n        });\n        const { data, success } = userData;\n        console.log(userData);\n        if (success) {\n          setOptions(data);\n        }\n      } catch (err) {}\n    };\n    authHandler();\n  }, [date, index, type]);\n  React.useEffect(() => {\n    let data = options.sort();\n    if (type === \"PE\") {\n      data = data.reverse();\n    }\n    setOptions2(data);\n  }, [options, type]);\n\n  const handleChange = event => {\n    setSelectedIndex(event.target.value);\n    console.log(event.target.value);\n    console.log(options[event.target.value]);\n    if (strikeprice) strikeprice(event.target.value);\n    if (strikeprice2) strikeprice2(event.target.value);\n  };\n\n  const inputLabel = React.useRef(null);\n  if (date !== \"\" && index !== \"\" && options.length !== 0) {\n    return (\n      <div className={classes.root}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel ref={inputLabel} id=\"demo-simple-select-outlined-label\">\n            {type} Price\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-required-label\"\n            id=\"demo-simple-select-required\"\n            value={selectedIndex}\n            onChange={handleChange}\n            className={classes.selectEmpty}\n          >\n            {options2.map((option, index) => (\n              <MenuItem value={option}>{option}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\nimport { apiRequest } from \"../../utils/helper\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip\n} from \"recharts\";\nimport \"./Charts.css\";\n\nexport default function Charts2({ date, index, sPrice, lPrice }) {\n  const [chartData, setChartData] = React.useState([]);\n  const [chartData2, setChartData2] = React.useState([]);\n  React.useEffect(() => {\n    setChartData([]);\n    setChartData2([]);\n  }, [index, date]);\n  React.useEffect(() => {\n    const authHandler = async () => {\n      try {\n        console.log(date, index);\n        const userData = await apiRequest({\n          url: \"https://api.optionalgo.in:6001/v1/getdata\",\n          method: \"post\",\n          bodyParams: {\n            date: date,\n            pointtype: \"CE\",\n            stockname: index\n          }\n        });\n        const { data, success } = userData;\n\n        if (success) {\n          let cData = [];\n\n          for (let i = 0; i < data.length; i++) {\n            let { time_hour_m_in_sec, indexprice } = data[i];\n\n            if (i === 0) {\n              sPrice(indexprice);\n            }\n            if (i === data.length - 1) {\n              lPrice(indexprice);\n            }\n\n            cData.push({ time: time_hour_m_in_sec, price: indexprice });\n          }\n          setChartData2(cData);\n        }\n      } catch (err) {}\n    };\n    authHandler();\n\n    const interval = setInterval(() => {\n      authHandler();\n    }, 60000);\n    return () => clearInterval(interval);\n  }, [date, index, sPrice, lPrice]);\n\n  React.useEffect(() => {\n    const updatechart = () => {\n      if (chartData.length === 0) {\n        setChartData(chartData2);\n      } else {\n        for (let i = chartData.length; i < chartData2.length; i++) {\n          setChartData([...chartData, chartData2[i]]);\n        }\n      }\n    };\n    updatechart();\n  }, [chartData2, chartData]);\n\n  return (\n    <div>\n      <div>\n        <br />\n      </div>\n\n      <LineChart\n        width={1000}\n        height={400}\n        data={chartData}\n        margin={{ top: 5, right: 20, bottom: 5, left: 20 }}\n      >\n        <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" />\n        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n        <XAxis dataKey=\"time\" />\n        <YAxis type=\"number\" domain={[\"dataMin-50\", \"dataMax+50 \"]} />\n        <Tooltip />\n      </LineChart>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n    },\r\n    position: \"fixed\",\r\n    right: \"5%\",\r\n    top: \"25%\",\r\n    bottom: \"auto\",\r\n    left: \"auto\",\r\n    borderStyle: \"groove\",\r\n    border: \"gold\",\r\n    background: \"black\",\r\n    color: \"white\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function FloatingActionButtons({\r\n  startPrice,\r\n  lastPrice,\r\n  index\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <h6>\r\n          <div style={{ color: \"green\" }}>Start Price:</div> {startPrice}\r\n        </h6>\r\n        <h6>\r\n          <div style={{ color: \"green\" }}>Last Price:</div> {lastPrice}\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./home.css\";\r\n\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport ScrollableTabsButtonForce from \"../Components/Tabs\";\r\nimport SimpleListMenu from \"../Components/Menu\";\r\nimport MenuStock from \"../Components/MenuStock\";\r\nimport { AppBar, Fab } from \"@material-ui/core\";\r\nimport MenuStrikePrice from \"../Components/MenuStrikePrice\";\r\nimport Charts2 from \"../Components/Charts/Chart2\";\r\nimport FloatingActionButtons from \"../Components/Buttons/FloatingButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MinusIcon from \"@material-ui/icons/Remove\";\r\n\r\nconst Home = () => {\r\n  const [date, setdate] = React.useState(\"\");\r\n  const [ind, setind] = React.useState(\"\");\r\n  const [ceprice, setceprice] = React.useState(0);\r\n  const [peprice, setpeprice] = React.useState(0);\r\n  const [startprice, setstartprice] = React.useState(0);\r\n  const [lastprice, setlastprice] = React.useState(0);\r\n  const [tabs, setTabs] = React.useState([]);\r\n  const changeDateHandler = newDate => {\r\n    setdate(newDate);\r\n    console.log(date);\r\n  };\r\n  const changeindHandler = newind => {\r\n    setind(newind);\r\n    console.log(ind);\r\n  };\r\n  const changeSp1Handler = newPePrice => {\r\n    setpeprice(newPePrice);\r\n    console.log(peprice);\r\n  };\r\n  const changeSp2Handler = newCePrice => {\r\n    setceprice(newCePrice);\r\n    console.log(ceprice);\r\n  };\r\n  const handleRemoveChart = key => {\r\n    console.log(key);\r\n\r\n    let data = tabs.filter((_, index) => index !== key);\r\n    console.log(data);\r\n    setTabs(data);\r\n  };\r\n  const handleAddChart = () => {\r\n    let dateForChart = date;\r\n    let indForChart = ind;\r\n    let ceForChart = ceprice;\r\n    let peForChart = peprice;\r\n    let key = date + ind + ceForChart + peForChart;\r\n    let data = (\r\n      <div>\r\n        <h6 style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <div style={{ color: \"green\" }}>CE Price: </div> {ceForChart}\r\n          <div style={{ flex: \"1\" }}></div>\r\n          <div style={{ color: \"green\" }}>PE Price: </div> {peForChart}\r\n        </h6>\r\n\r\n        <ScrollableTabsButtonForce\r\n          date={dateForChart}\r\n          index={indForChart}\r\n          pePrice={peForChart}\r\n          cePrice={ceForChart}\r\n        />\r\n      </div>\r\n    );\r\n    setTabs([data, ...tabs]);\r\n  };\r\n  return (\r\n    <div className=\"home-body\">\r\n      <MDBContainer className=\" mt-5 pt-5\">\r\n        <AppBar\r\n          position=\"static\"\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          color=\"white\"\r\n        >\r\n          <div className=\"drop\">\r\n            <SimpleListMenu changeDate={changeDateHandler} />\r\n            <MenuStock changeIndex={changeindHandler} />\r\n            {date !== \"\" && ind !== \"\" ? (\r\n              <MenuStrikePrice\r\n                strikeprice={changeSp1Handler}\r\n                date={date}\r\n                index={ind}\r\n                type=\"PE\"\r\n              />\r\n            ) : null}\r\n            {date !== \"\" && ind !== \"\" && peprice !== \"\" ? (\r\n              <MenuStrikePrice\r\n                strikeprice2={changeSp2Handler}\r\n                date={date}\r\n                index={ind}\r\n                type=\"CE\"\r\n              />\r\n            ) : null}\r\n            {ceprice !== 0 && peprice !== \"\" ? (\r\n              <div style={{ background: \"white\", paddingRight: \"1%\" }}>\r\n                <Fab\r\n                  color=\"primary\"\r\n                  aria-label=\"add\"\r\n                  style={{ width: \"50px\", top: \"20px\" }}\r\n                  onClick={handleAddChart}\r\n                >\r\n                  <AddIcon />\r\n                </Fab>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </AppBar>\r\n        {startprice !== 0 && lastprice !== 0 ? (\r\n          <FloatingActionButtons\r\n            startPrice={startprice}\r\n            lastPrice={lastprice}\r\n            index={ind}\r\n          />\r\n        ) : null}\r\n        <ul style={{ listStyleType: \"none\", margin: \"0\", padding: \"0\" }}>\r\n          {tabs.map((tab, index) => (\r\n            <li key={index} style={{ paddingTop: \"3%\" }}>\r\n              {tab}\r\n              <Fab\r\n                color=\"primary\"\r\n                key={index}\r\n                value={index}\r\n                aria-label=\"remove\"\r\n                onClick={() => handleRemoveChart(index)}\r\n                style={{ width: \"50px\", top: \"20px\" }}\r\n              >\r\n                <MinusIcon key={index} value={index} />\r\n              </Fab>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {date !== \"\" && ind !== \"\" ? (\r\n          <Charts2\r\n            date={date}\r\n            index={ind}\r\n            sPrice={newvalue => {\r\n              setstartprice(newvalue);\r\n            }}\r\n            lPrice={newvalue => {\r\n              setlastprice(newvalue);\r\n            }}\r\n          />\r\n        ) : null}\r\n      </MDBContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Home from \"./Containers/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}