{"version":3,"sources":["Components/Toolbar/Toolbar.js","utils/helper.js","Components/Charts/Charts.js","Components/Tabs.js","Components/Menu.js","Components/MenuStock.js","Components/MenuStrikePrice.js","Components/Charts/Chart2.js","Components/Buttons/FloatingButton.js","Containers/Home.js","App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","root","flexGrow","title","marginRight","spacing","apiRequest","a","async","url","method","bodyParams","fetch","headers","Accept","body","JSON","stringify","undefined","response","json","Charts","date","index","type","ce","pe","React","useState","chartData","setChartData","chartData2","setChartData2","useEffect","authHandler","pointtype","stockname","strike_price_pe","strike_price_ce","userData","data","success","console","log","cData","i","length","time_hour_m_in_sec","indexprice","stock","j","data2","last_price","oi","expiry","strike_price","instrument_type","id","time","toFixed","last_price_ce","last_price_pe","push","interval","setInterval","clearInterval","updatechart","width","height","margin","top","right","bottom","left","dataKey","stroke","strokeDasharray","allowDecimals","allowDataOverflow","domain","content","e","active","payload","className","TabPanel","props","children","value","indexType","other","Typography","component","role","hidden","aria-labelledby","Container","p","style","marginTop","useStyles","backgroundColor","palette","background","paper","ScrollableTabsButtonForce","cePrice","pePrice","classes","setValue","AppBar","position","justifyContent","color","Tabs","onChange","event","newValue","variant","scrollButtons","indicatorColor","textColor","aria-label","Tab","label","a11yProps","maxWidth","SimpleListMenu","changeDate","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","options","setOptions","List","ListItem","button","aria-haspopup","aria-controls","onClick","currentTarget","ListItemText","primary","secondary","Menu","keepMounted","open","Boolean","onClose","map","option","MenuItem","key","selected","handleMenuItemClick","changeIndex","MenuStrikePrice","strikeprice","strikeprice2","Charts2","sPrice","lPrice","price","borderStyle","border","extendedIcon","FloatingActionButtons","startPrice","lastPrice","Home","setdate","setindex","ceprice","setceprice","peprice","setpeprice","startprice","setstartprice","lastprice","setlastprice","display","newDate","newIndex","newPePrice","newCePrice","newvalue","App","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed6325cc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { HashRouter, Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  title: {\r\n    marginRight: theme.spacing(2),\r\n    flexGrow: 1\r\n  }\r\n}));\r\nconst MyToolbar = ({ hideButton }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <AppBar position=\"sticky\" style={{ background: \"black\" }}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link to=\"/\">My LOGO</Link>\r\n          </Typography>\r\n          <Button\r\n            color=\"inherit\"\r\n            hidden={hideButton}\r\n            onClick={e => {\r\n              window.localStorage.clear();\r\n              window.location.reload();\r\n            }}\r\n            style={{ width: \"10px\" }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default MyToolbar;\r\n","import validator from \"validator\";\nimport { DEFAULT_USER_AUTH } from \"./Consts\";\n\n/** Handle form validation for the login form\n * @param email - user's auth email\n * @param password - user's auth password\n * @param setError - function that handles updating error state value\n */\nexport const validateLoginForm = (email, password, setError) => {\n  // Check for undefined or empty input fields\n  if (!email || !password) {\n    //setError(\"Please enter a valid email and password.\");\n    return false;\n  }\n\n  // Validate email\n  if (!validator.isEmail(email)) {\n    if (!validator.isMobilePhone(email)) {\n      //    setError(\"Please enter a valid email address.\");\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/** Return user auth from local storage value */\nexport const getStoredUserAuth = () => {\n  const auth = localStorage.getItem(\"UserAuth\");\n  if (auth) {\n    return JSON.parse(auth);\n  }\n  return DEFAULT_USER_AUTH;\n};\n\n/**\n * API Request handler\n * @param url - api endpoint\n * @param method - http method\n * @param bodyParams - body parameters of request\n */\nexport const apiRequest = async ({ url, method, bodyParams }) => {\n  const response = await fetch(url, {\n    method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: bodyParams ? JSON.stringify(bodyParams) : undefined\n  });\n  return await response.json();\n};\n\n/**\n * API Request handler\n * @param url - api endpoint\n * @param method - http method\n * @param bodyParams - body parameters of request\n */\nexport const apiImageUpdate = async ({ url, method, bodyParams }) => {\n  var { imagePath } = bodyParams;\n  const response = await fetch(url, {\n    method,\n    body: imagePath\n  });\n  return await response.json();\n};\n","import React from \"react\";\nimport { apiRequest } from \"../../utils/helper\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip\n} from \"recharts\";\nimport \"./Charts.css\";\n\nexport default function Charts({ date, index, type, ce, pe }) {\n  const [chartData, setChartData] = React.useState([]);\n  const [chartData2, setChartData2] = React.useState([]);\n\n  React.useEffect(() => {\n    const authHandler = async () => {\n      try {\n        const userData = await apiRequest({\n          url: \"https://api.optionalgo.in:6001/v1/getdata\",\n          method: \"post\",\n          bodyParams: {\n            date: date,\n            pointtype: type,\n            stockname: index,\n            strike_price_pe: pe,\n            strike_price_ce: ce\n          }\n        });\n        const { data, success } = userData;\n        console.log(userData);\n        if (success) {\n          let cData = [];\n\n          for (let i = 0; i < data.length; i++) {\n            let { time_hour_m_in_sec, indexprice, stock } = data[i];\n\n            for (let j = 0; j < stock.length; j++) {\n              let data2 = {};\n              if (type !== \"Both\") {\n                let {\n                  last_price,\n                  oi,\n                  expiry,\n                  strike_price,\n                  instrument_type\n                } = stock[j];\n                data2 = {\n                  id: time_hour_m_in_sec,\n                  time: time_hour_m_in_sec,\n                  indexprice: indexprice,\n                  last_price: last_price.toFixed(2),\n                  oi: oi,\n                  expiry: expiry,\n                  strike_price: strike_price,\n                  instrument_type: instrument_type\n                };\n              } else {\n                let {\n                  last_price,\n                  oi,\n                  strike_price_pe,\n                  strike_price_ce,\n                  last_price_ce,\n                  last_price_pe,\n                  instrument_type\n                } = stock[j];\n                data2 = {\n                  id: cData.length,\n                  time: time_hour_m_in_sec,\n                  last_price: last_price.toFixed(2),\n                  indexprice: indexprice,\n                  oi: oi,\n                  strike_price_ce: strike_price_ce,\n                  strike_price_pe: strike_price_pe,\n                  last_price_ce: last_price_ce,\n                  last_price_pe: last_price_pe,\n                  instrument_type: instrument_type\n                };\n              }\n\n              if (j === 0) {\n                console.log(cData);\n                cData.push(data2);\n              }\n            }\n          }\n          setChartData2(cData);\n        }\n      } catch (err) {}\n    };\n    authHandler();\n    const interval = setInterval(() => {\n      authHandler();\n    }, 60000);\n    return () => clearInterval(interval);\n  }, [date, index, type, ce, pe]);\n\n  React.useEffect(() => {\n    setChartData([]);\n    setChartData2([]);\n  }, [date, index, type, ce, pe]);\n\n  React.useEffect(() => {\n    const updatechart = () => {\n      if (chartData.length === 0) {\n        setChartData(chartData2);\n      } else {\n        for (let i = chartData.length; i < chartData2.length; i++) {\n          setChartData([...chartData, chartData2[i]]);\n        }\n      }\n    };\n    updatechart();\n  }, [chartData2, chartData]);\n\n  const customTooltipOnYourLine = e => {\n    if (\n      e.active &&\n      e.payload != null &&\n      e.payload[0] != null &&\n      type !== \"Both\"\n    ) {\n      return (\n        <div className=\"custom-tooltip\">\n          <p>{e.payload[0].payload[\"time\"]}</p>\n          <p>{e.payload[0].payload[\"last_price\"]}</p>\n          <p>{e.payload[0].payload[\"strike_price\"]}</p>\n          <p>{e.payload[0].payload[\"indexprice\"]}</p>\n        </div>\n      );\n    }\n    if (\n      e.active &&\n      e.payload != null &&\n      e.payload[0] != null &&\n      type === \"Both\"\n    ) {\n      return (\n        <div className=\"customTooltip\">\n          <div className=\"tooltipContent\">\n            <p>LTP: {e.payload[0].payload[\"last_price\"]}</p>\n            <p>Puts Price: {e.payload[0].payload[\"strike_price_pe\"]}</p>\n            <p>Call Price: {e.payload[0].payload[\"strike_price_ce\"]}</p>\n            <p>Puts Last Price: {e.payload[0].payload[\"last_price_pe\"]}</p>\n            <p>Call Last Price: {e.payload[0].payload[\"last_price_ce\"]}</p>\n            <p>Time: {e.payload[0].payload[\"time\"]}</p>\n          </div>\n        </div>\n      );\n    } else {\n      return \"\";\n    }\n  };\n\n  return (\n    <div>\n      <LineChart\n        width={1000}\n        height={400}\n        data={chartData}\n        margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\n      >\n        <Line type=\"monotone\" dataKey=\"last_price\" stroke=\"#8884d8\" />\n        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n        <XAxis dataKey=\"time\" />\n        <YAxis\n          type=\"number\"\n          allowDecimals={true}\n          allowDataOverflow\n          domain={[\"dataMin-10\", \"dataMax+10 \"]}\n        />\n        <Tooltip content={customTooltipOnYourLine} />\n      </LineChart>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { Container } from \"@material-ui/core\";\nimport \"./Tabs.css\";\nimport Charts from \"./Charts/Charts\";\nfunction TabPanel(props) {\n  const { children, value, index, date, indexType, ce, pe, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Container p={3} style={{ marginTop: \"10px\" }}>\n          <Charts\n            date={date}\n            index={indexType}\n            type={children}\n            ce={ce}\n            pe={pe}\n          />\n        </Container>\n      )}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    \"aria-controls\": `scrollable-force-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function ScrollableTabsButtonForce({\n  date,\n  index,\n  cePrice,\n  pePrice\n}) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  if (date !== \"\" && index !== \"\" && cePrice !== 0 && pePrice !== 0) {\n    console.log(date);\n    console.log(date !== \" \");\n    return (\n      <div className={classes.root}>\n        <AppBar\n          position=\"static\"\n          style={{ justifyContent: \"center\" }}\n          color=\"default\"\n        >\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            variant=\"scrollable\"\n            style={{ justifyContent: \"center\" }}\n            scrollButtons=\"off\"\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            aria-label=\"scrollable force tabs example\"\n          >\n            <Tab label=\"CALL+PUTS\" {...a11yProps(0)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel\n          value={value}\n          date={date}\n          indexType={index}\n          ce={cePrice}\n          pe={pePrice}\n          index={0}\n        >\n          Both\n        </TabPanel>\n        <TabPanel\n          value={value}\n          date={date}\n          indexType={index}\n          ce={cePrice}\n          index={1}\n        >\n          CE\n        </TabPanel>\n        <TabPanel\n          value={value}\n          date={date}\n          indexType={index}\n          pe={pePrice}\n          index={2}\n        >\n          PE\n        </TabPanel>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { apiRequest } from \"../utils/helper\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function SimpleListMenu({ changeDate }) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const [options, setOptions] = React.useState([]);\n  React.useEffect(() => {\n    authHandler();\n  }, []);\n  const authHandler = async () => {\n    try {\n      const userData = await apiRequest({\n        url: \"https://api.optionalgo.in:6001/v1/getdates\",\n        method: \"post\",\n        bodyParams: {}\n      });\n      const { data, success } = userData;\n      console.log(userData);\n      if (success) {\n        setOptions(data);\n      }\n    } catch (err) {}\n  };\n\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    console.log(index);\n\n    changeDate(options[index]);\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"Device settings\">\n        <ListItem\n          button\n          aria-haspopup=\"true\"\n          aria-controls=\"lock-menu\"\n          aria-label=\"Select Date\"\n          onClick={handleClickListItem}\n        >\n          <ListItemText\n            primary=\"Select Date\"\n            secondary={options[selectedIndex]}\n          />\n        </ListItem>\n      </List>\n      <Menu\n        id=\"lock-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options.map((option, index) => (\n          <MenuItem\n            key={option}\n            selected={index === selectedIndex}\n            onClick={event => handleMenuItemClick(event, index)}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function SimpleListMenu({ changeIndex }) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState();\n  const options = [\"NIFTY\", \"BANKNIFTY\"];\n\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    console.log(index);\n\n    changeIndex(options[index]);\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"Device settings\">\n        <ListItem\n          button\n          aria-haspopup=\"true\"\n          aria-controls=\"lock-menu\"\n          aria-label=\"Select Index\"\n          onClick={handleClickListItem}\n        >\n          <ListItemText\n            primary=\"Select Index\"\n            secondary={options[selectedIndex]}\n          />\n        </ListItem>\n      </List>\n      <Menu\n        id=\"lock-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options.map((option, index) => (\n          <MenuItem\n            key={option}\n            selected={index === selectedIndex}\n            onClick={event => handleMenuItemClick(event, index)}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { apiRequest } from \"../utils/helper\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function MenuStrikePrice({\n  strikeprice,\n  strikeprice2,\n  date,\n  index,\n  type\n}) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const [options, setOptions] = React.useState([]);\n  React.useEffect(() => {\n    const authHandler = async () => {\n      try {\n        const userData = await apiRequest({\n          url: \"https://api.optionalgo.in:6001/v1/getstrikeprices\",\n          method: \"post\",\n          bodyParams: {\n            date: date,\n            pointtype: type,\n            stockname: index\n          }\n        });\n        const { data, success } = userData;\n        console.log(userData);\n        if (success) {\n          setOptions(data);\n        }\n      } catch (err) {}\n    };\n    authHandler();\n  }, [date, index, type]);\n\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    console.log(index);\n    console.log(options[index]);\n    if (strikeprice) strikeprice(options[index]);\n    if (strikeprice2) strikeprice2(options[index]);\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  if (date !== \"\" && index !== \"\") {\n    return (\n      <div className={classes.root}>\n        <List component=\"nav\" aria-label=\"Device settings\">\n          <ListItem\n            button\n            aria-haspopup=\"true\"\n            aria-controls=\"lock-menu\"\n            aria-label={\"Select \" + type + \" Price\"}\n            onClick={handleClickListItem}\n          >\n            <ListItemText\n              primary={\"Select \" + type + \" Price\"}\n              secondary={options[selectedIndex]}\n            />\n          </ListItem>\n        </List>\n        <Menu\n          id=\"lock-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          {options.map((option, index) => (\n            <MenuItem\n              key={option}\n              selected={index === selectedIndex}\n              onClick={event => handleMenuItemClick(event, index)}\n            >\n              {option}\n            </MenuItem>\n          ))}\n        </Menu>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\nimport { apiRequest } from \"../../utils/helper\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip\n} from \"recharts\";\nimport \"./Charts.css\";\n\nexport default function Charts2({ date, index, sPrice, lPrice }) {\n  const [chartData, setChartData] = React.useState([]);\n  const [chartData2, setChartData2] = React.useState([]);\n  React.useEffect(() => {\n    setChartData([]);\n    setChartData2([]);\n  }, [index, date]);\n  React.useEffect(() => {\n    const authHandler = async () => {\n      try {\n        console.log(date, index);\n        const userData = await apiRequest({\n          url: \"https://api.optionalgo.in:6001/v1/getdata\",\n          method: \"post\",\n          bodyParams: {\n            date: date,\n            pointtype: \"CE\",\n            stockname: index\n          }\n        });\n        const { data, success } = userData;\n\n        if (success) {\n          let cData = [];\n\n          for (let i = 0; i < data.length; i++) {\n            let { time_hour_m_in_sec, indexprice } = data[i];\n\n            if (i === 0) {\n              sPrice(indexprice);\n            }\n            if (i === data.length - 1) {\n              lPrice(indexprice);\n            }\n\n            cData.push({ time: time_hour_m_in_sec, price: indexprice });\n          }\n          setChartData2(cData);\n        }\n      } catch (err) {}\n    };\n    authHandler();\n\n    const interval = setInterval(() => {\n      authHandler();\n    }, 60000);\n    return () => clearInterval(interval);\n  }, [date, index, sPrice, lPrice]);\n\n  React.useEffect(() => {\n    const updatechart = () => {\n      if (chartData.length === 0) {\n        setChartData(chartData2);\n      } else {\n        for (let i = chartData.length; i < chartData2.length; i++) {\n          setChartData([...chartData, chartData2[i]]);\n        }\n      }\n    };\n    updatechart();\n  }, [chartData2, chartData]);\n\n  return (\n    <div>\n      <div>\n        <br />\n      </div>\n\n      <LineChart\n        width={1000}\n        height={400}\n        data={chartData}\n        margin={{ top: 5, right: 20, bottom: 5, left: 20 }}\n      >\n        <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" />\n        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n        <XAxis dataKey=\"time\" />\n        <YAxis type=\"number\" domain={[\"dataMin-50\", \"dataMax+50 \"]} />\n        <Tooltip />\n      </LineChart>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n    },\r\n    position: \"fixed\",\r\n    right: \"5%\",\r\n    top: \"25%\",\r\n    bottom: \"auto\",\r\n    left: \"auto\",\r\n    borderStyle: \"groove\",\r\n    border: \"gold\",\r\n    background: \"black\",\r\n    color: \"white\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function FloatingActionButtons({\r\n  startPrice,\r\n  lastPrice,\r\n  index\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <h6>\r\n          <div style={{ color: \"green\" }}>Start Price:</div> {startPrice}\r\n        </h6>\r\n        <h6>\r\n          <div style={{ color: \"green\" }}>Last Price:</div> {lastPrice}\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Toolbar from \"../Components/Toolbar/Toolbar\";\r\nimport \"./home.css\";\r\n\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport ScrollableTabsButtonForce from \"../Components/Tabs\";\r\nimport SimpleListMenu from \"../Components/Menu\";\r\nimport MenuStock from \"../Components/MenuStock\";\r\nimport { AppBar } from \"@material-ui/core\";\r\nimport MenuStrikePrice from \"../Components/MenuStrikePrice\";\r\nimport Charts2 from \"../Components/Charts/Chart2\";\r\nimport FloatingActionButtons from \"../Components/Buttons/FloatingButton\";\r\n\r\nconst Home = () => {\r\n  const [date, setdate] = React.useState(\"\");\r\n  const [index, setindex] = React.useState(\"\");\r\n  const [ceprice, setceprice] = React.useState(0);\r\n  const [peprice, setpeprice] = React.useState(0);\r\n  const [startprice, setstartprice] = React.useState(0);\r\n  const [lastprice, setlastprice] = React.useState(0);\r\n  const changeDateHandler = newDate => {\r\n    setdate(newDate);\r\n    console.log(date);\r\n  };\r\n  const changeIndexHandler = newIndex => {\r\n    setindex(newIndex);\r\n    console.log(index);\r\n  };\r\n  const changeSp1Handler = newPePrice => {\r\n    setpeprice(newPePrice);\r\n    console.log(peprice);\r\n  };\r\n  const changeSp2Handler = newCePrice => {\r\n    setceprice(newCePrice);\r\n    console.log(ceprice);\r\n  };\r\n  return (\r\n    <div className=\"home-body\">\r\n      <MDBContainer className=\" mt-5 pt-5\">\r\n        <AppBar\r\n          position=\"static\"\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          color=\"default\"\r\n        >\r\n          <div className=\"drop\">\r\n            <SimpleListMenu changeDate={changeDateHandler} />\r\n            <MenuStock changeIndex={changeIndexHandler} />\r\n            {date !== \"\" && index !== \"\" ? (\r\n              <MenuStrikePrice\r\n                strikeprice={changeSp1Handler}\r\n                date={date}\r\n                index={index}\r\n                type=\"PE\"\r\n              />\r\n            ) : null}\r\n            {date !== \"\" && index !== \"\" ? (\r\n              <MenuStrikePrice\r\n                strikeprice2={changeSp2Handler}\r\n                date={date}\r\n                index={index}\r\n                type=\"CE\"\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </AppBar>\r\n        {startprice !== 0 && lastprice !== 0 ? (\r\n          <FloatingActionButtons\r\n            startPrice={startprice}\r\n            lastPrice={lastprice}\r\n            index={index}\r\n          />\r\n        ) : null}\r\n        {date !== \"\" && index !== \"\" && ceprice !== 0 && peprice !== 0 ? (\r\n          <ScrollableTabsButtonForce\r\n            date={date}\r\n            index={index}\r\n            pePrice={peprice}\r\n            cePrice={ceprice}\r\n          />\r\n        ) : null}\r\n        {date !== \"\" && index !== \"\" ? (\r\n          <Charts2\r\n            date={date}\r\n            index={index}\r\n            sPrice={newvalue => {\r\n              setstartprice(newvalue);\r\n            }}\r\n            lPrice={newvalue => {\r\n              setlastprice(newvalue);\r\n            }}\r\n          />\r\n        ) : null}\r\n      </MDBContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Home from \"./Containers/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}